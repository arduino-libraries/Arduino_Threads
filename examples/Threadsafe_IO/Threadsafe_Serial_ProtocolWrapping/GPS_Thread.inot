/**************************************************************************************
 * FUNCTION DEFINITION
 **************************************************************************************/

static String nmea_message_prefix(String const & /* msg */)
{
  return String("$");
}

static String nmea_message_suffix(String const & prefix, String const & msg)
{
  /* NMEA checksum is calculated over the complete message
   * starting with '$' and ending with the end of the message.
   */
  byte checksum = 0;
  std::for_each(msg.c_str(),
                msg.c_str() + msg.length(),
                [&checksum](char const c)
                {
                  checksum ^= static_cast<uint8_t>(c);
                });
  /* Assemble the footer of the NMEA message. */
  char footer[16] = {0};
  snprintf(footer, sizeof(footer), "*%02X\r\n", checksum);
  return String(footer);
}

/**************************************************************************************
 * SETUP/LOOP
 **************************************************************************************/

void setup()
{
  Serial.begin(9600);

  Serial.prefix(nmea_message_prefix);
  Serial.suffix(nmea_message_suffix);
}

void loop()
{
  /* Sleep between 5 and 500 ms */
  rtos::ThisThread::sleep_for(rtos::Kernel::Clock::duration_u32(random(5,500)));

  /* Print a fake NMEA GPRMC message:
   * $GPRMC,062101.714,A,5001.869,N,01912.114,E,955535.7,116.2,290520,000.0,W*45\r\n
   */
  Serial.block();

  Serial.print("GPRMC,");
  Serial.print(millis());
  Serial.print(",A,");
  Serial.print("5001.869,");
  Serial.print("N,");
  Serial.print("01912.114,");
  Serial.print("E,");
  Serial.print("955535.7,");
  Serial.print("116.2,");
  Serial.print("290520,");
  Serial.print("000.0,");
  Serial.print("W");

  Serial.unblock();
}
